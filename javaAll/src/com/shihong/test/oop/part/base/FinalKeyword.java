package com.shihong.test.oop.part.base;

/**
 * @author shihong on 2019/5/4.
 * final 修饰符特点
 */
public class FinalKeyword {

    /*
     *
     *  final,finally和finalize的区别
     *     final可以修饰 类，属性，方法
     *     被final修饰的类不能被继承
     *     被final修饰的方法不能被重写
     *     被final修饰的属性作为常量，必须显示初始化，而且不能重新赋值
     *
     *     finally是try语句中的一个语句体,不能单独使用,多用来释放资源
     *
     *     finalize是Object类的一个方法,被所有类继承,当垃圾回收器确定不存在对该对象的更多引用时，由对象的垃圾回收器调用此方法。
     *
     * final定义的类中所有的成员方法都会隐式的定义为final方法。
     *
     * 注意：若父类中final方法的访问权限为private，将导致子类中不能直接继承该方法，
     *      因此，此时可以在子类中定义相同方法名的函数，此时不会与重写final的矛盾，而是在子类中重新地定义了新方法。
     *
     * final修饰一个成员变量（属性），必须要显示初始化。这里有两种初始化方式，一种是在变量声明的时候初始化；
     *      第二种方法是在声明变量的时候不赋初值，但是要在这个变量所在的类的所有的构造函数中对这个变量赋初值。
     *
     * 当函数的参数类型声明为final时，说明该参数是只读型的。即你可以读取使用该参数，但是无法改变该参数的值。
	 *
	 a)final修饰符：
			 a) 代表最终的： 用于修饰变量，方法和类
			 b) 它修饰的类不能被继承
			 c) 修饰的方法不能被重写/覆盖
			 d)   修饰的变量叫常量，一旦被赋值，值 不能改变
	 b)	常量的命名规范： 所有的字母都大写，每个单词以“_”分隔如
	 	XXX_YYY_ZZZ
	 c)	常量没有默认值，必须在声明时显示赋值或代码块赋值或构造器赋值
	 a)	若使用构造器为常量赋值必须 每一个构造器都为常量赋值

	 static与final与static final关键字的简述
		 static：强调唯一性，它的使用无需建立对象，也就是一个类中所有static修饰的量或方法就是唯一的，
	 		对象的不同不会影响到他，甚至不建立对象都可以使用static修饰的量或方法。 所以声明时必须初始化！！！！
	 		static只能修饰内部类，修饰以后的内部类可以像普通外部类一样调用。
		 final：强调不变性，但是必须建立对象才能调用，随着对象的不同，final修饰的量也可以不同，
	 		所以他的初始化可以在声明时进行，也可以在构造函数中进行，当然他修饰的类不可以继承，修饰的量不可以改变。
		 static final：结合上述两者特性，使用无需实例化，声明必须初始化。


	 */
}
