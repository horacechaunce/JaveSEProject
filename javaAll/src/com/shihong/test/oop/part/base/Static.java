package com.shihong.test.oop.part.base;

/**
 * @author shihong on 2020/9/1.
 * 属性类，类方法的设计思想
 */
public class Static {
	/*
		1, 类属性作为该类各个对象之间共享的变量。在设计类时,分析哪些类属性不因对象的 不同而改变，
			将这些属性设置为类属性。相应的方法设置为类方法。
		2, 如果方法与调用者无关，则这样的方法通常被声明为类方法，由于不需要创建对象
			就可以调用类方法，从而简化了方法的调用

		3, Static :用于修饰属性，方法，代码块，内部类
			a)	Static  修饰的属性（静态变量或类变量）
			b)	Static 修饰的方法（静态方法或类方法）

		4, 特点：
			a)	被static 修饰的内容随着类的加载 而加载，随着类的消失而消失
			b)	静态变量被该类 所有对象所共享 ；
			c)	一旦某一个对象改变该属性值 ，其他对象的该属性值也会随之改变
			d)	静态变量的存在优先于对象
			e)	我们可以通过  类名 .  类变量	的方式调用static修饰的变量

		5, 类变量和实例变量的区别
			a)	内存中的位置不同
			b)	生命周期不同

		6, 静态方法:
			a)	静态方法的存在优先于对象
			b)	随着类的加载而加载
			c)	我们可以通过  类名	.  类方法	的方式调用
			d)	静态方法中不能调用非静态成员（因为静态方法存在时，非静态成 员还不存在）
			e)	非静态方法可以调用静态成员
			f)	静态方法中不能用this  ,	super


		7, static（静态变更，类变量） 的特点：
     *      它是一个修饰符，用于修饰成员
     *      static修改的成员被据对象所共享，优先于对象存在，随着类的加载而存在，随着类的销毁而销毁，
     *      多了一种调用方式，可以通过类名.成员的方式调用
     *
     * 	8, 成员变量和静态变量的区别:
     *      1, 两个变量的生命同期不同
     *          成员变量随着对象的创建而存在，随着对象的销亡而销亡
     *          随着类的加载而存在，随着类的销毁而销毁
     *      2，调用方式不同
     *          成员变量只能被对象调用
     *          静态变量可以被对象调用，还可以被类名调用
     *      3，别名不同
     *          成员变量又称实例变量
     *          静态变量又称类变量
     *      4，存储位置不同
     *          成员变量数据存储在堆内存的对象中，所以也叫对象的特有数据
     *          静态变量数据存储在方法区（的静态区），所以也叫对象的共享数据



	 */
}
