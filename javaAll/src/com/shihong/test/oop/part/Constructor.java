package com.shihong.test.oop.part;

/**
 * @author shihong on 2020/8/28.
 * 构造器
 */
public class Constructor {

	/**
	 * 类的成员之三：构造器：
		 构造器的特征：
		 它具有与类相同的名称
		 它不声明返回值类型（与void声明不同）
		 不能被static,final,synchronized,abstract,native修饰，不能有return语句返回值

		 构造器的作用：创建对象，给对象进行初始化

		 根据参数不同构造器可以分类两类：
		 隐式无参构造器（系统默认提供）
		 显式定义一个有参或无参构造器（无参、有参）

		 注意：
		 java语言中，每个类都至少有一个构造器
		 默认构造器的修饰符与所属类的修饰符一致
		 一旦显式的定义了构造器，则系统不再提供默认无参构造器
		 一个类可以创建多个重载的构造器
		 父类的构造器不可被子类继承

		 用于创建对象的方法
		 a.   类中都有一个默认的无参构造器，不用显式的存在
		 b.   当我们显式的声明一个构造器的时候 ，默认的就会消失，使用我们 自己声明的构造器
		 当创建此类对象时，默认调用此无参构造方法

		 好处：
		 a.   可以进行初始化的操作，一般用有参构造器来为属性初始化赋值，代码简洁；
		 语法：
		 修饰符 类名（参数列表）{
		 方法体
		 }
		 注意： 没有返回类型 c.   方法名和类名必须一致 d.   构造方法可以重载

		 当类中没有显式声明构造方法时，系统默认提供一个无参的构造方法 当类中声明了构造方法时，系统将不再提供无参构造方法

		 This：  可以访问类中的成员，包括构造器，
		 This.（）;  或有参的 this.（参数列表）;
		 注：必须放在构造方法的首行

		 调用：
		 创建对象时自动调用构造方法
		 New	类名（）;	或	new   类名（参数）;

		 构造函数：
		 * 创建对象时调用的函数，作用是给对象初始化，对象必须通过构造函数来进行初始化
		 * <p>
		 * 一个类中会有一个默认的空参数的构造函数，当在类中显式的定义构造函数时，那么类中的默认构造函数就没有了
		 * <p>
		 * 构造函数和一般函数的区别：
		 * 构造函数：在对象创建时，调用对应的函数，给对象初始化使用，初始化时只可以调用一次
		 * 一般函数：在对象创建后，需要函数功能时，被所属对象调用，可以被多次调用
		 * <p>
		 * 当成员变量和局部变量重名时我们可以使用this来区分

	 */
}
